/*
 * board_pinout.cpp
 *
 *  Created on: 19 kwi 2017
 *      Author: Paweï¿½
 */

#include "board_pinout.h"

#ifdef LCD
const STM32_Pin UART_DBG_TX_PIN(GPIOA, GPIO_PIN_9, GPIO_MODE_AF_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin UART_DBG_RX_PIN(GPIOA, GPIO_PIN_10, GPIO_MODE_INPUT, GPIO_NOPULL);
#endif
#if defined(FD) || defined(LED)
const STM32_Pin UART_DBG_TX_PIN(GPIOB, GPIO_PIN_10, GPIO_MODE_AF_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin UART_DBG_RX_PIN(GPIOB, GPIO_PIN_11, GPIO_MODE_INPUT, GPIO_NOPULL);
#endif

const STM32_Pin RS485_TX_PIN(GPIOA, GPIO_PIN_2, GPIO_MODE_AF_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin RS485_RX_PIN(GPIOA, GPIO_PIN_3, GPIO_MODE_INPUT, GPIO_NOPULL);
const STM32_Pin RS485_DIR_PIN(GPIOA, GPIO_PIN_1, GPIO_MODE_OUTPUT_PP);

const STM32_Pin IBIS_TX_PIN(GPIOA, GPIO_PIN_9, GPIO_MODE_AF_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin IBIS_RX_PIN(GPIOA, GPIO_PIN_10, GPIO_MODE_INPUT, GPIO_NOPULL);

const STM32_Pin SPI_CS_PIN(GPIOA, GPIO_PIN_4, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin SPI_CK_PIN(GPIOA, GPIO_PIN_5, GPIO_MODE_AF_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin SPI_MOSI_PIN(GPIOA, GPIO_PIN_7, GPIO_MODE_AF_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);


//SDIO
const STM32_Pin SDIO_CMD(GPIOD, GPIO_PIN_2, GPIO_MODE_AF_PP, GPIO_PULLUP, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin SDIO_D0(GPIOC, GPIO_PIN_8, GPIO_MODE_AF_PP, GPIO_PULLUP, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin SDIO_D1(GPIOC, GPIO_PIN_9, GPIO_MODE_AF_PP, GPIO_PULLUP, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin SDIO_D2(GPIOC, GPIO_PIN_10, GPIO_MODE_AF_PP, GPIO_PULLUP, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin SDIO_D3(GPIOC, GPIO_PIN_11, GPIO_MODE_AF_PP, GPIO_PULLUP, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin SDIO_CLK(GPIOC, GPIO_PIN_12, GPIO_MODE_AF_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);

const STM32_Pin USER_LED(GPIOC, GPIO_PIN_13, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_MEDIUM);
const STM32_Pin USER_LED2(GPIOB, GPIO_PIN_12, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_MEDIUM);


#if defined(FD) || defined(LED)
//FP2800
const STM32_Pin FP2800_A0_PIN(GPIOA, GPIO_PIN_11, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin FP2800_A1_PIN(GPIOA, GPIO_PIN_8, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin FP2800_A2_PIN(GPIOC, GPIO_PIN_7, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin FP2800_B0_PIN(GPIOC, GPIO_PIN_6, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin FP2800_B1_PIN(GPIOB, GPIO_PIN_15, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin FP2800_DATA_PIN(GPIOA, GPIO_PIN_12, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);

//Shift registers
const STM32_Pin FD_SET_DATA_PIN(GPIOC, GPIO_PIN_1, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin FD_SET_RCLK_PIN(GPIOC, GPIO_PIN_15, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin FD_SET_SRCLK_PIN(GPIOC, GPIO_PIN_14, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin FD_SET_OE_PIN(GPIOC, GPIO_PIN_0, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin FD_SET_MR_PIN(GPIOC, GPIO_PIN_13, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);

const STM32_Pin FD_CLR_DATA_PIN(GPIOB, GPIO_PIN_8, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin FD_CLR_RCLK_PIN(GPIOB, GPIO_PIN_6, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin FD_CLR_SRCLK_PIN(GPIOB, GPIO_PIN_5, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin FD_CLR_OE_PIN(GPIOB, GPIO_PIN_7, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin FD_CLR_MR_PIN(GPIOB, GPIO_PIN_3, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_HIGH);


const STM32_Pin BRD_ADDR_EN_PIN(GPIOB, GPIO_PIN_4, GPIO_MODE_OUTPUT_PP);
const STM32_Pin BRD_ADDR_0_PIN(GPIOB, GPIO_PIN_14, GPIO_MODE_OUTPUT_PP);
const STM32_Pin BRD_ADDR_1_PIN(GPIOB, GPIO_PIN_13, GPIO_MODE_OUTPUT_PP);
const STM32_Pin BRD_ADDR_2_PIN(GPIOB, GPIO_PIN_12, GPIO_MODE_OUTPUT_PP);
const STM32_Pin BRD_ADDR_3_PIN(GPIOB, GPIO_PIN_2, GPIO_MODE_OUTPUT_PP);
const STM32_Pin BRD_ADDR_4_PIN(GPIOB, GPIO_PIN_1, GPIO_MODE_OUTPUT_PP);
const STM32_Pin BRD_ADDR_5_PIN(GPIOB, GPIO_PIN_0, GPIO_MODE_OUTPUT_PP);
const STM32_Pin BRD_ADDR_6_PIN(GPIOC, GPIO_PIN_5, GPIO_MODE_OUTPUT_PP);
const STM32_Pin BRD_ADDR_7_PIN(GPIOC, GPIO_PIN_4, GPIO_MODE_OUTPUT_PP);

const STM32_Pin USER_LED(GPIOA, GPIO_PIN_15, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_MEDIUM);

#endif

#ifdef LCD
//LCD
const STM32_Pin LCD_DATA(GPIOB, GPIO_PIN_15, GPIO_MODE_OUTPUT_PP, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin LCD_ENABLE(GPIOC, GPIO_PIN_7, GPIO_MODE_OUTPUT_PP, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin LCD_REFRESH(GPIOB, GPIO_PIN_2, GPIO_MODE_OUTPUT_PP, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin LCD_RST2(GPIOB, GPIO_PIN_12, GPIO_MODE_OUTPUT_PP, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin LCD_CLK(GPIOB, GPIO_PIN_13, GPIO_MODE_OUTPUT_PP, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin LCD_MISO(GPIOB, GPIO_PIN_14, GPIO_MODE_OUTPUT_PP, 0, GPIO_SPEED_FREQ_HIGH);
const STM32_Pin LCD_INPUT(GPIOC, GPIO_PIN_6, GPIO_MODE_INPUT);
const STM32_Pin VLCD_IN(GPIOC, GPIO_PIN_0, GPIO_MODE_INPUT);

const STM32_Pin USER_LED(GPIOC, GPIO_PIN_15, GPIO_MODE_OUTPUT_PP, GPIO_NOPULL, 0, GPIO_SPEED_FREQ_MEDIUM);

#endif


//SPI-extra

